#include <stdio.h>
#include <string.h>

#define ROWS 4
#define COLS 4

// Function to calculate 2D parity and send
void paritySender2D() {
    char data[ROWS][COLS + 1];  // +1 for null terminator
    int rowParity[ROWS] = {0};
    int colParity[COLS] = {0};

    printf("Enter %d rows of %d-bit binary data:\n", ROWS, COLS);
    for (int i = 0; i < ROWS; i++) {
        scanf("%s", data[i]);
        for (int j = 0; j < COLS; j++) {
            if (data[i][j] == '1') {
                rowParity[i]++;
                colParity[j]++;
            }
        }
    }
    printf("Row Parity: ");
    for (int i = 0; i < ROWS; i++) {
        printf("%d", rowParity[i] % 2);
    }
    printf("\n");

    printf("Column Parity: ");
    for (int j = 0; j < COLS; j++) {
        printf("%d", colParity[j] % 2);
    }
    printf("\n");
}

// Function to receive 2D data and check parity
void parityReceiver2D() {
    char received[ROWS][COLS + 2];  // +1 for row parity +1 for null
    char colParity[COLS + 1];

    printf("Enter received data (%d rows of %d+1 bits with row parity):\n", ROWS, COLS);
    for (int i = 0; i < ROWS; i++) {
        scanf("%s", received[i]);
    }

    printf("Enter received column parity (%d bits): ", COLS);
    scanf("%s", colParity);

    int error = 0;

    printf("Checking Row Parity:\n");
    for (int i = 0; i < ROWS; i++) {
        int count = 0;
        for (int j = 0; j < COLS + 1; j++) {
            if (received[i][j] == '1')
                count++;
        }
        printf("Row %d: %s --> Parity: %s\n", i + 1, received[i], (count % 2 == 0) ? "✅" : "❌");
        if (count % 2 != 0) {
            error = 1;
        }
    }

    printf("Checking Column Parity:\n");
    for (int j = 0; j < COLS; j++) {
        int count = 0;
        for (int i = 0; i < ROWS; i++) {
            if (received[i][j] == '1')
                count++;
        }
        int expected = colParity[j] - '0';
        printf("Column %d: Count of 1s = %d, Expected = %d --> %s\n", j + 1, count, expected, (count % 2 == expected) ? "✅" : "❌");
        if ((count % 2) != expected) {
            error = 1;
        }
    }

    if (!error) {
        printf("✅ No Error: Data received correctly.\n");
    } else {
        printf("❌ Error detected in received data!\n");
    }
}

// Main menu
int main() {
    int choice;
    printf("1. 2D Parity Sender\n");
    printf("2. 2D Parity Receiver\n");
    printf("Enter your choice: ");
    scanf("%d", &choice);

    if (choice == 1) {
        paritySender2D();
    } else if (choice == 2) {
        parityReceiver2D();
    } else {
        printf("Invalid choice.\n");
    }

    return 0;
}
